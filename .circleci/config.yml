# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy the infrastructures
          command: | 
            aws cloudformation delete-stack --stack-name myStack-$CIRCLE_WORKFLOW_ID:0:5
jobs:
  create-infrastructure:
    docker: 
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
          name: Create Cloudformation stack
          command:  ./cf.sh template.yml myStack-${CIRCLE_WORKFLOW_ID:0:5} us-east-1
      
      - run:
          name: Update inventory file
          command: |
            echo '[all]' > inventory-2
            aws --region us-east-1 ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --filters "Name=tag:Project,Values=udacity" \
            --output text >> inventory-2
      - persist_to_workspace:
          root: ./
          paths:
            - inventory-2
  configure-infrastructure:
    docker:
      - image: python:3.7-alpine3.16
    
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["54:77:b2:48:a9:bf:01:c7:16:fe:9b:09:69:77:6a:5c"]
      - attach_workspace:
          at: ./
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run playbook and configure server
          command: |
            ansible-playbook main-remote.yml -i ./inventory-2
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run: 
          name: smoke test
          command: |
            URL="https://blog.udacit673737y.com/"

            if curl -s --head $URL
            then
              return 0 
            else
              return 1 
            fi
      - destroy_environment
        when: on_fail

workflows:
  Infrastructure:
    jobs:
      - create-infrastructure
      - configure-infrastructure:
          requires:
            - create-infrastructure
      - smoke_test:
          requires:
            - configure-infrastructure
